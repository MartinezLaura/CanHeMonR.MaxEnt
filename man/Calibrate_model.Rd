% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate_model.r
\name{Calibrate_model}
\alias{Calibrate_model}
\title{Calibrate vegetation distribution models}
\usage{
Calibrate_model(vuln_classes = "ALL", training_path, model_outp_dir, name,
  stadistics = FALSE, myargs = NULL, model_type, stadisticspath = NULL)
}
\arguments{
\item{vuln_classes}{A character vector of the classes you want to model. The should be presented in the column 'class' of training_df. Default 'ALL'}

\item{training_path}{Path to the rdsdata that contains the data.frame, with in the column 'pres' 1/0 to indicate presence absence, then covariate columns, and a colum 'class' groupin grows by
the land-cover class the data was sampled for. This df is typically generated by sample_points.r}

\item{model_outp_dir}{Path and filename prefix to save the model objects}

\item{name}{Character. Name that you want to give to the serialized object with the model}

\item{stadistics}{Boolean. If Ture stadistics of the model will be done and save. Take into account that it can take several time. Default FALSE}

\item{myargs}{List. Arguments to pass to the maxent model, in the following format. Example: myargs <- c("noautofeature", "nohinge", "nothreshold", "noproduct","nolinear"). Default NULL}

\item{model_type}{Character. Type of model that we wnat to use to predict types: raw - logistic - cloglog}

\item{stadisticspath}{Path where you want to save the stadistics of the model. Default NULL}
}
\value{
Serialized object with class-specific distribution models, using a data frame created from training points and covariate images
}
\description{
For each class in .shp polygon file, calibrate a distribution model using a raster brick as predictors.
}
\examples{
\dontrun{
tt <- calibrate_model(vuln_classes = list(c('Pb')), 
                      training_path = '/DATA/Results/RunSickTree_Output/ADS/Test/MaxentModel/MaxentCastelobranco_NA-buffer.rdsdata',
                      model_outp_dir = '/DATA/Results/RunSickTree_Output/ADS/Final_Iter1-2/MaxentModel/',
                      name='samp_NA_buffer_logistic', 
                      stadistics = TRUE,
                      myargs = c("noautofeature", "nohinge"),
                      model_type = 'cloglog',
                      stadisticspath = '/DATA/Results/RunSickTree_Output/ADS/Test/MaxentModel/Stadistics/')
                      }
}
\seealso{
For more possible arguments for MaxEnt see: https://groups.google.com/forum/#!msg/Maxent/yRBlvZ1_9rQ/Fj8Two0lmHIJ

Depends on: \code{\link[CanHeMonR.MaxEnt]{sick_tree_errors.r}}
}
